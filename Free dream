import React, { useState } from "react";
import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from "react-router-dom";

export default function FantasyForgeAI() {
  return (
    <Router>
      <div style={styles.appContainer}>
        <nav style={styles.navbar}>
          <Link to="/" style={styles.navLink}>
            Fantasy Forge AI
          </Link>
          <div>
            <Link to="/generate" style={styles.navLink}>
              Create Story
            </Link>
            <Link to="/library" style={styles.navLink}>
              Library
            </Link>
            <Link to="/contact" style={styles.navLink}>
              Contact + Community
            </Link>
          </div>
        </nav>

        <Routes>
          <Route path="/" element={<LandingPage />} />
          <Route path="/generate" element={<StoryGenerator />} />
          <Route path="/library" element={<Library />} />
          <Route path="/contact" element={<ContactCommunity />} />
        </Routes>
      </div>
    </Router>
  );
}

function LandingPage() {
  const navigate = useNavigate();

  return (
    <div style={styles.landingContainer}>
      <h1 style={styles.title}>Create Bold Adult Stories with AI</h1>
      <button
        style={styles.ctaButton}
        onClick={() => navigate("/generate")}
        aria-label="Start Creating Stories"
      >
        Start Creating
      </button>
    </div>
  );
}

function StoryGenerator() {
  const [prompt, setPrompt] = useState("");
  const [story, setStory] = useState("");
  const [loading, setLoading] = useState(false);

  const generateStory = async () => {
    if (!prompt.trim()) {
      alert("Please enter a story prompt.");
      return;
    }

    setLoading(true);
    setStory("");

    try {
      // Placeholder for AI text generation API call
      await new Promise((res) => setTimeout(res, 1500));
      setStory(
        `Generated story for prompt: "${prompt}"\n\nOnce upon a time, in a world crafted by fantasy and bold imagination...`
      );
    } catch (error) {
      alert("Error generating story. Please try again.");
    }

    setLoading(false);
  };

  return (
    <div style={styles.container}>
      <h2 style={styles.heading}>Type a prompt to create your story</h2>
      <textarea
        style={styles.textarea}
        value={prompt}
        onChange={(e) => setPrompt(e.target.value)}
        placeholder="Enter your story prompt here..."
        rows={6}
      />
      <button
        style={styles.button}
        onClick={generateStory}
        disabled={loading}
        aria-label="Generate Story"
      >
        {loading ? "Creating..." : "Generate Story"}
      </button>

      {story && (
        <pre style={styles.storyOutput} aria-live="polite" aria-label="Generated Story">
          {story}
        </pre>
      )}
    </div>
  );
}

function Library() {
  return (
    <div style={styles.libraryContainer}>
      <h2 style={styles.heading}>Your Library</h2>
      <p style={styles.text}>
        Access your saved stories and cinematic videos here â€” feature coming soon!
      </p>
    </div>
  );
}

function ContactCommunity() {
  return (
    <div style={styles.libraryContainer}>
      <h2 style={styles.heading}>Contact & Community</h2>
      <p style={styles.text}>
        We'd love your feedback! Engage safely with our community. Feature coming soon.
      </p>
    </div>
  );
}

const styles = {
  appContainer: {
    backgroundColor: "#000",
    minHeight: "100vh",
    color: "#eee",
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
  },
  navbar: {
    display: "flex",
    justifyContent: "space-between",
    padding: "1rem 2rem",
    borderBottom: "1px solid #550055",
    backgroundColor: "#110011",
  },
  navLink: {
    margin: "0 1rem",
    color: "#ff0080",
    textDecoration: "none",
    fontWeight: "bold",
    fontSize: "1.1rem",
  },
  landingContainer: {
    minHeight: "80vh",
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center",
    textAlign: "center",
  },
  title: {
    fontSize: "3rem",
    color: "#ff007f",
    textShadow:
      "0 0 8px #ff007f, 0 0 20px #b30059, 0 0 40px #ff007f, 0 0 60px #ff007f",
    marginBottom: "2rem",
  },
  ctaButton: {
    backgroundColor: "#6a006a",
    border: "none",
    color: "#fff",
    padding: "1rem 3rem",
    fontSize: "1.5rem",
    borderRadius: "12px",
    cursor: "pointer",
    boxShadow: "0 0 10px #ff00bf",
    transition: "background-color 0.3s ease",
  },
  container: {
    maxWidth: "720px",
    margin: "2rem auto",
    padding: "1rem",
  },
  heading: {
    color: "#bb00bb",
    fontSize: "1.8rem",
    marginBottom: "1rem",
  },
  textarea: {
    width: "100%",
    fontSize: "1.1rem",
    padding: "1rem",
    borderRadius: "8px",
    border: "2px solid #660066",
    backgroundColor: "#180018",
    color: "#eee",
    resize: "vertical",
    marginBottom: "1rem",
  },
  button: {
    padding: "1rem 2rem",
    fontSize: "1.1rem",
    borderRadius: "8px",
    border: "none",
    backgroundColor: "#b300b3",
    color: "#fff",
    cursor: "pointer",
    boxShadow: "0 0 12px #b300b3",
    transition: "background-color 0.3s",
  },
  storyOutput: {
    whiteSpace: "pre-wrap",
    marginTop: "2rem",
    backgroundColor: "#220022",
    padding: "1rem",
    borderRadius: "8px",
    fontSize: "1rem",
    color: "#ddd",
    boxShadow: "0 0 10px #a800a8",
  },
  libraryContainer: {
    maxWidth: "720px",
    margin: "2rem auto",
    padding: "1rem",
    textAlign: "center",
  },
  text: {
    color: "#ccc",
  },
};
